##########################
#Pseudo code
#
# I've tried to keep this generic so it can be adapted for ssh to any system for quick queries to email
#
# 1 - open emutable creds so it can be run from a ISD server i.e. his-util01
# 2 - SSH to target
# 3 - run commands to get outout
# 4 - format email
# 4 - Email sent
##########################

###################################
#SSH key - not set as of 202305-23
#see his-until01 \\his-util01.ad.ucl.ac.uk\c$\users\isdutnvpda\cohesity_cluster_support(.pub)
#setting key on Coehsity clusters woudl simplify process
###################################


# Requires an imutable password made to txt file first
# Has must be set up as username "support" and password as per lastpass
# Following run once or when the password changed for account
# (get-credential).password | ConvertFrom-SecureString | set-content "C:\{path}\ssh_cohesity.txt"
 
#Open encrtypted credentials
$password_cohesity_support = Get-Content "C:\{path}\ssh_cohesity.txt" | ConvertTo-SecureString
$credential_cohesity_support = New-Object System.Management.Automation.PsCredential($user, $password_cohesity_support)

#Clusters by order below
#KLB
#TP3
#AWS
#Azure

$CohesityClusters = @"
128.40.105.33
128.40.105.101
10.61.134.232
10.63.3.7
"@ -split "`n" | % { $_.trim() }

foreach($Cluster in $CohesityClusters )  {

    #Connect server with SSH
    ##ssh support@$Cluster -password $credential_cohesity_support

    #SOurce of this https://stackoverflow.com/questions/54923868/ssh-using-powershell-script-by-passing-the-password-along-with-the-commnad
    $ComputerName = $Cluster
    $SessionID = New-SSHSession -ComputerName $ComputerName -Credential $credential_cohesity_support #Connect Over SSH
    
    #cli commands set up
    #total_backlog
    $total_backlog="date ; elinks -dump-width 200 http://`elinks -dump-width 200 http:0:20000 | grep Master | awk -F] '{print $2}'`/archivalz | awk '/Archival Targets/,/Archival Copy Tasks/'"
    #individual_job_backlog
    $individual_job_backlog= "IP_PORT=$(eval elinks -dump-width 200 http:0:20000 | grep -i master | awk -F] '{print $2}'); elinks -dump-width 1000 http:$IP_PORT/backup_job | egrep Details | egrep -v 'Running/Waiting for retry' | cut -d '[' -f 1 | rev | awk '{print substr($0, index($0, $3))}' | rev | awk '{print "   - "$1" - "substr($0, index($0, $2))}' > /tmp/archiveQueue.txt; IP_PORT=$(eval elinks -dump-width 200 http:0:20000 | grep -i master | awk -F] '{print $2}'); elinks -dump-width 200 http:$IP_PORT/archivalz | awk '/Archival Copy Tasks/,/Visible links/' | egrep -v 'Visible links|References|^$|Time elapsed since copy|Archival Copy Tasks' | awk '{print $1" - "$5" - "$4}' | tr -s [:space:] | sort | uniq -c >> /tmp/archiveQueue.txt; cat /tmp/archiveQueue.txt | sort -k 2 -r | egrep -C 1 '  [0-9]'"
    #Node_disk_usage
    $Node_disk_usage="allssh.sh df -h"

    #Rn actual copmmands output to variables
    $total_backlog_output=Invoke-SSHCommand -Index $SessionID.Sessionid -Command $total_backlog
    $individual_job_backlog_output=Invoke-SSHCommand -Index $SessionID.Sessionid -Command $individual_job_backlog
    $Node_disk_usage_output=Invoke-SSHCommand -Index $SessionID.Sessionid -Command $Node_disk_usage
    
    #Create Subject of email
    $Subject = "[Cohesity Monitoring] "+$Cluster+" Daily report"
    #Create body of email
    $body = "This Cluster has the following archive backlog status and Drive Utilisation<br>
    <br>
    Backlog <br>
    <br>
    Total number of backlog items: $total_backlog_output <br>
    Individual backlog by Jobs: $individual_job_backlog_output <br>
    <br>
    Disk Usage <br>
    <br>
    Cluster Disk Usage (df -h): $Node_disk_usage_output<br>
    <br>
    This email was generated by a scheduled task on his-util01"

    #email Cloud with contents of varaible
    $sender = "noreply@ucl.ac.uk"
    #$recipient = "cloud-platforms@ucl.ac.uk"
    $recipient = "p.davy@ucl.ac.uk" #Testing only
    $smtp = "isd-smtp.ucl.ac.uk"
    
    Send-MailMessage -From $sender -to $recipient -Subject $subject -Body $body -BodyAsHtml -SmtpServer $smtp
}
